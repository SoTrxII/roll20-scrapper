name: Build and push image to github registry

on:
  push:
    tags:
      - '*'
jobs:
  func-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Define ENV VARS
        id: define_env
        run: echo "::set-output name=tag::${GITHUB_REF#refs/*/}"

      - name: Pull template
        uses: docker://openfaas/faas-cli:latest-root
        with:
          args: template store pull golang-http

      - name: Login to DockerHub
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate dockerfiles for all functions
        uses: docker://openfaas/faas-cli:latest-root
        with:
          args: build -f roll20-scrapper.dev.yml --shrinkwrap

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Moving vendor dir to functions' roots
        id: move_vendor
        run: |
          ls && \
          chmod u+x ./build/get-players/modules-cleanup.sh &&\
          sh ./build/get-players/modules-cleanup.sh &&\
          chmod u+x ./build/get-messages/modules-cleanup.sh &&\
          sh ./build/get-messages/modules-cleanup.sh &&\
          chmod u+x ./build/join-game/modules-cleanup.sh &&\
          sh ./build/join-game/modules-cleanup.sh

      - name: Removing unsused go.mod
        id: remove_go_mod_files
        run: |
          cd build/get-players && rm go.* && cd ../.. &&\
          cd build/get-players && rm go.* && cd ../.. &&\
          cd build/get-players && rm go.* && cd ../..

      - name: Build and push get-players func
        uses: docker/build-push-action@v2
        with:
          context: ./build/get-players/
          file: ./build/get-players/Dockerfile
          build-args: |
            GO111MODULE=off
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/get-players:${{ steps.define_env.outputs.tag }}

      - name: Build and push join-game func
        uses: docker/build-push-action@v2
        with:
          context: ./build/join-game/
          file: ./build/join-game/Dockerfile
          build-args: |
            GO111MODULE=off
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/join-game:${{ steps.define_env.outputs.tag }}

      - name: Build and push get-messages func
        uses: docker/build-push-action@v2
        with:
          context: ./build/get-messages/
          file: ./build/get-messages/Dockerfile
          build-args: |
            GO111MODULE=off
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/get-messages:${{ steps.define_env.outputs.tag }}